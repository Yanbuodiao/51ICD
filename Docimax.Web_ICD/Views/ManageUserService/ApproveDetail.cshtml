@model Docimax.Web_ICD.Models.VerifyIdentityViewModel
@using Docimax.Interface_ICD.Enum

@{
    ViewBag.Title = "实名认证";
}

<h2>@ViewBag.Title</h2>
<hr />
@using (Html.BeginForm("ApproveDetail", "ManageUserService", FormMethod.Post, new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.UserID, new { @Cache = false })
    @Html.HiddenFor(model => model.UserName, new { @Cache = false })
    @Html.HiddenFor(model => model.LastModifyStamp, new { @Cache = false })
    @Html.ValidationSummary("", new { @class = "text-danger" })
    <div class="form-group">
        @Html.Label("用户名", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class=" col-md-10">
            @Html.TextBoxFor(model => model.UserName, new { @class = "form-control", @disabled = "true" })
        </div>
    </div>
    <div class="form-group">
        @Html.Label("姓名", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class=" col-md-10">
            @Html.TextBoxFor(model => model.RealName, new { @class = "form-control", @disabled = "true" })
        </div>
    </div>
    <div class="form-group">
        @Html.Label("身份证号", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class=" col-md-10">
            @Html.TextBoxFor(model => model.IDCardNo, new { @class = "form-control", @disabled = "true" })
        </div>
    </div>
    <div class="form-group">
        @Html.Label("银行卡号", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class=" col-md-10">
            @Html.TextBoxFor(model => model.BankCardNO, new { @class = "form-control", @disabled = "true" })
        </div>
    </div>
    <div class="form-group">
        @Html.Label("身份证正面照", new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @{
    var fileList = Model.FileList.Where(e => e.AttachType == UserAttachType.身份证正面.GetHashCode()).ToList();
    foreach (var file in fileList)
    {
        <div class="form-group col-md-10" style="padding-top:7px;">
            <a style="cursor: pointer;" data-url="@file.FileURL" data-contenttype="@file.ContentType" onclick="showPic(this)">@file.FileName</a>
        </div>
    }
            }
        </div>
    </div>
    <div class="form-group">
        @Html.Label("身份证背面照", new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @{
    var fileList1 = Model.FileList.Where(e => e.AttachType == UserAttachType.身份证背面.GetHashCode()).ToList();
    foreach (var file in fileList1)
    {
        <div class="form-group col-md-10" style="padding-top:7px;">
            <a style="cursor: pointer;" class="tree-nav-a" data-url="@file.FileURL" data-contenttype="@file.ContentType" onclick="showPic(this)">@file.FileName</a>
        </div>
    }
            }
        </div>
    </div>
    <div class="form-group">
        @Html.Label("银行卡照片", new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @{
    var fileList2 = Model.FileList.Where(e => e.AttachType == UserAttachType.银行卡.GetHashCode()).ToList();
    foreach (var file in fileList2)
    {
        <div class="form-group col-md-10" style="padding-top:7px;">
            <a style="cursor: pointer;" class="tree-nav-a" data-url="@file.FileURL" data-contenttype="@file.ContentType" onclick="showPic(this)">@file.FileName</a>
        </div>
    }
            }
        </div>
    </div>
    <div class="form-group">
        @Html.Label("认证状态", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class=" col-md-10">
            @Html.TextBoxFor(model => model.CertificateFlag, new { @class = "form-control", @disabled = "true" })
        </div>
    </div>
    <div class="form-group">
        @switch (Model.CertificateFlag)
        {
            case CertificateState.认证通过:
                <div class="col-md-offset-2 col-md-1">
                    <input type="submit" name="freeze" id="freeze" class="btn btn-primary" value="冻结" />
                </div>
                break;
            case CertificateState.发起认证申请:
            <div class="col-md-offset-2 col-md-1">
                <input type="submit" name="approve" id="approve" class="btn btn-primary" value="审核通过" />
            </div>
            <div class="col-md-2">
                <input type="submit" name="refuse" id="refuse" class="btn btn-default" value="审核拒绝" />
            </div>
                break;
            case CertificateState.冻结:
            <div class="col-md-offset-2 col-md-1">
                <input type="submit" name="unfreeze" id="unfreeze" class="btn btn-primary" value="解冻" />
            </div>
                break;
            default:
                break;
        }
    </div>
}
<div>
    @Html.ActionLink("返回列表", "Index")
</div>
<div class="modal fade" id="showPixModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <img id="pic" class="img-thumbnail" onclick="hidePix()" />
    </div>
</div>
<script type="text/javascript">
    function showPic(el) {
        var picURL = $(el).attr("data-url");
        var contentType = $(el).attr("data-contenttype");
        var newSrc = "@Url.Action("ShowPic", "UploadItem")?picURL=" + picURL + "&contentType=" + contentType;
        $("#showPixModal").modal('show');
        $("#pic").attr("src", newSrc);
    };
    function hidePix() {
        $("#showPixModal").modal('hide');
    }
</script>