@using Docimax.Interface_ICD.Model
@using PagedList.Mvc
@using Docimax.Common
@using Docimax.Interface_ICD.Enum

@model ICDTimePagedList<UserCertificationSearch, Docimax.Web_ICD.Models.VerifyBankCardModel>
@{
    ViewBag.Title = "银行卡认证列表";
}

<h2>@ViewBag.Title</h2>
<p class="text-success">@ViewBag.StatusMessage</p>
@using (Html.BeginForm("index", "ManageBankCard", FormMethod.Get))
{
    <div class="row">
        <div class="col-sm-11">
            <div class="form-inline">
                @Html.TextBoxFor(model => model.TextFilter, new { @class = "form-control", @placeholder = "用户名" })
                @Html.EnumDropDownListFor(model => model.SearchModel.CertificateStatus, "请选择申请状态", new { @class = "form-control" })
            </div>
        </div>
        <div class="pull-right col-lg-1">
            <button class="btn btn-default" type="submit">
                查询
                <span class="glyphicon glyphicon-search" aria-hidden="true"></span>
            </button>
        </div>
    </div>
}
<div style="margin-top:17px;">
    @if (Model != null && Model.Content != null)
    {
        var grid = new WebGrid(
                   canPage: true,
                   rowsPerPage: Model.PageSize,
                   canSort: false,
                   ajaxUpdateContainerId: "grid");
        grid.Bind(Model.Content, rowCount: Model.TotalRecords, autoSortAndPage: false);
        grid.Pager(WebGridPagerModes.All);
        @grid.GetHtml(htmlAttributes: new { id = "grid" },
            fillEmptyRows: false,
            tableStyle: "table table-bordered table-hover",
            mode: WebGridPagerModes.All,
            firstText: "第一页",
            previousText: "上一页",
            nextText: "下一页",
            lastText: "最后一页",
            columns: grid.Columns(
            grid.Column("UserName", "用户名", style: "col-lg-3", canSort: false),
            grid.Column("CertificateFlag", "状态", style: "col-lg-3", canSort: false),
            grid.Column(header: "操作", canSort: false, style: "action",
                format: @<text>
                <a href="@Url.Action("Detail", "ManageBankCard", new { userID = @item.UserID })" c clas class="btn btn-default">
                    详情
                </a>
                @switch ((CertificateState)item.CertificateFlag)
                {
                    case CertificateState.认证通过:
                        <a href="@Url.Action("ApproveDetail", "ManageBankCard", new { userID = @item.UserID })" clas class="btn btn-default">
                            冻结
                        </a>
                        break;
                    case CertificateState.发起认证申请:
                    <a href="@Url.Action("ApproveDetail", "ManageBankCard", new { userID = @item.UserID })" clas class="btn btn-primary">
                        审核
                    </a>
                        break;
                    case CertificateState.冻结:
                    <a href="@Url.Action("ApproveDetail", "ManageBankCard", new { userID = @item.UserID })" clas class="btn btn-default">
                        解冻
                    </a>
                        break;
                    default:
                        break;
                }
                </text>)));
    }
    else
    {
        //todo  提示没有数据
    }
</div>
